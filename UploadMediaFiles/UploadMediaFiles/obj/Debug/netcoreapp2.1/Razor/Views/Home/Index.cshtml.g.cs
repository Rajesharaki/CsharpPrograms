#pragma checksum "C:\Users\rajes\OneDrive\Desktop\VisualStudio\CsharpPrograms\UploadMediaFiles\UploadMediaFiles\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9febec1503de04154bdbe4b4da18a72b2154b776"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\rajes\OneDrive\Desktop\VisualStudio\CsharpPrograms\UploadMediaFiles\UploadMediaFiles\Views\_ViewImports.cshtml"
using UploadMediaFiles;

#line default
#line hidden
#line 2 "C:\Users\rajes\OneDrive\Desktop\VisualStudio\CsharpPrograms\UploadMediaFiles\UploadMediaFiles\Views\_ViewImports.cshtml"
using UploadMediaFiles.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9febec1503de04154bdbe4b4da18a72b2154b776", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6564841fadac241782b610b63aed21c2b1c38bc2", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 149, true);
            WriteLiteral("\r\n<div>\r\n    <input type=\"file\" id=\"uploadFile\" name=\"file\" />\r\n    <a class=\"btn btn-primary btn-success\" id=\"btnUpload\">Upload file</a>\r\n</div>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(168, 1807, true);
                WriteLiteral(@"
    <script>
        $(document).ready(function () {
            $('#btnUpload').click(function () {
                UploadFile($('#uploadFile')[0].files);
            }
            )
        });

        function UploadFile(TargetFile) {
            var FileChunk = [];
            var file = TargetFile[0];
            var MaxFileSizeMB = 100;
            var BufferChunkSize = MaxFileSizeMB * (1024 * 1024);
            var ReadBuffer_Size = 1024;
            var FileStreamPos = 0;
            var EndPos = BufferChunkSize;
            var Size = file.size;

            while (FileStreamPos < Size) {
                FileChunk.push(file.slice(FileStreamPos, EndPos));
                FileStreamPos = EndPos;
                EndPos = FileStreamPos + BufferChunkSize;
            }
            var TotalParts = FileChunk.length;
            var PartCount = 0;
            while (chunk = FileChunk.shift()) {
                PartCount++;
                var FilePartName = file.name + "".part_""");
                WriteLiteral(@" + PartCount + ""."" + TotalParts;
                UploadFileChunk(chunk, FilePartName, PartCount, TotalParts, file.FileName);
            }
        }

        function UploadFileChunk(Chunk, FileName, fileCount, TotalFile) {
            var FD = new FormData();
            FD.append('file', Chunk, FileName);
            $.ajax({
                type: ""POST"",
                url: 'http://localhost:59220/api/Upload/UploadFile',
                contentType: false,
                processData: false,
                data: FD,
                success: function (response) {
                    if (fileCount == TotalFile) {
                        alert(""Successfully Uploaded "");
                    }
                }
            });
        }
    </script>
");
                EndContext();
            }
            );
            BeginContext(1978, 2, true);
            WriteLiteral("\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
