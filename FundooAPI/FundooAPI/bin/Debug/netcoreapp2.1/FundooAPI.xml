<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FundooAPI</name>
    </assembly>
    <members>
        <member name="T:FundooAPI.Controllers.AccountController">
            <summary>
            Account controller class
            </summary>
        </member>
        <member name="M:FundooAPI.Controllers.AccountController.#ctor(BusinessManager.Interface.IAccount,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Caching.Distributed.IDistributedCache)">
            <summary>
            constractor Dependency injection
            </summary>
            <param name="account">IAccount interface inject</param>
            <param name="configuration">IConfiguration interface inject</param>
            <param name="distributedCache">IDistributedCache interface inject</param>
        </member>
        <member name="M:FundooAPI.Controllers.AccountController.Register(Common.Models.RegisterViewModel)">
            <summary>
            Register Post Method
            </summary>
            <param name="model">RegisterviewModel</param>
            <returns>IActionResult</returns>
        </member>
        <member name="M:FundooAPI.Controllers.AccountController.Login(Common.Models.LoginViewModel)">
            <summary>
            Login Post Method
            </summary>
            <param name="model">LoginViewModel</param>
            <returns>IActionResult</returns>
        </member>
        <member name="M:FundooAPI.Controllers.AccountController.ForgetPassword(Common.Models.ForgetPasswordViewModel)">
            <summary>
            ForgetPassword Post method
            </summary>
            <param name="model">ForgetPasswordViewModel</param>
            <returns>IActionResult Reset Token</returns>
        </member>
        <member name="M:FundooAPI.Controllers.AccountController.ResetPassword(Common.Models.ResetPasswordViewModel)">
            <summary>
            ResetPassword Post Method
            </summary>
            <param name="model">ResetPasswordViewModel</param>
            <returns>IActionResult</returns>
        </member>
        <member name="M:FundooAPI.Controllers.AccountController.ChangePassword(Common.Models.ChangePasswordViewModel)">
            <summary>
            ChangePassword Post Method
            </summary>
            <param name="model">ChangePasswordViewModel</param>
            <returns>IActionResult</returns>        
        </member>
        <member name="T:FundooAPI.Controllers.LabelController">
            <summary>
            LabelController Class
            </summary>
        </member>
        <member name="M:FundooAPI.Controllers.LabelController.#ctor(BusinessManager.Interface.ILabel)">
            <summary>
            LabelController Constructor
            </summary>
            <param name="label">constructor injection</param>
        </member>
        <member name="M:FundooAPI.Controllers.LabelController.AddLabelAync(Common.Models.LabelViewModel)">
            <summary>
            AddLabelAsync Method
            </summary>
            <param name="model">LabelViewModel Mandatory</param>
            <returns>IActionResult</returns>
        </member>
        <member name="M:FundooAPI.Controllers.LabelController.GetAllLablesAsync">
            <summary>
            GetAllLabels
            </summary>
            <returns>IActionResult</returns>
        </member>
        <member name="M:FundooAPI.Controllers.LabelController.DeleteLableByIdAsync(System.Int32)">
            <summary>
            DeleteLabelById
            </summary>
            <param name="id">Id mandatory</param>
            <returns>IActionResult</returns>
        </member>
        <member name="M:FundooAPI.Controllers.LabelController.DeleteAllLabelsAsync">
            <summary>
            DeleteAllLabelsAsync method
            </summary>
            <returns>IActionResult</returns>
        </member>
        <member name="M:FundooAPI.Controllers.LabelController.UpdateLabelAsync(Common.Models.LabelViewModel)">
            <summary>
            UpdateLabelAsync method
            </summary>
            <param name="model">Mandatory</param>
            <returns>IActionResult</returns>
        </member>
        <member name="M:FundooAPI.Controllers.LabelController.IsTrashAsync(System.Int32)">
            <summary>
            IsTrash method
            </summary>
            <param name="id">Mandatory</param>
            <returns>IActionResult</returns>
        </member>
        <member name="M:FundooAPI.Controllers.LabelController.IsArchiveAsync(System.Int32)">
            <summary>
            IsArchive method
            </summary>
            <param name="id">Mandatory</param>
            <returns>IActionResult</returns>
        </member>
        <member name="M:FundooAPI.Controllers.LabelController.PinAsync(System.Int32)">
            <summary>
            Pin method
            </summary>
            <param name="id">Id Mandaatory</param>
            <returns>IActionResult</returns>
        </member>
        <member name="M:FundooAPI.Controllers.LabelController.ReminderAsync(System.Int32)">
            <summary>
            ReminderAsync method
            </summary>
            <param name="id">Mandatory</param>
            <returns>IActionResult</returns>
        </member>
        <member name="T:FundooAPI.Controllers.NotesController">
            <summary>
            Notes Controller
            </summary>
        </member>
        <member name="M:FundooAPI.Controllers.NotesController.#ctor(BusinessManager.Interface.INotes)">
            <summary>
            Notes Controller constructor
            </summary>
            <param name="notes">inject INotes interface</param>
        </member>
        <member name="M:FundooAPI.Controllers.NotesController.AddNotesAsync(Microsoft.AspNetCore.Http.IFormFile,Common.Models.NotesViewModel)">
            <summary>
            AddNotesAsync Method its add the notes
            </summary>
            <param name="model">NoteModelView Manadatory</param>
            <param name="file">IFromFile Manadatory</param>
            <returns>HttpResponseMessage</returns>
        </member>
        <member name="M:FundooAPI.Controllers.NotesController.GetNotesByIdAsync(System.Int32)">
            <summary>
            GetNotesById 
            </summary>
            <param name="id">Manadatory</param>
            <returns>IActionResult</returns>
        </member>
        <member name="M:FundooAPI.Controllers.NotesController.GetAllNotes">
            <summary>
            GetAllNotes Methods
            </summary>
            <returns>all notes</returns>
        </member>
        <member name="M:FundooAPI.Controllers.NotesController.DeleteNotesByIdAsync(System.Int32)">
            <summary>
            DeleteNotesById
            </summary>
            <param name="id">Mandatory</param>
            <returns>IActionResult</returns>
        </member>
        <member name="M:FundooAPI.Controllers.NotesController.UpdateNotesAsync(Common.Models.NotesViewModel,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            UpdateNotesAsync Method
            </summary>
            <param name="model">NotesViewModel Mandatory</param>
            <param name="file">IFromFile Manadatory</param>
            <returns></returns>
        </member>
        <member name="M:FundooAPI.Controllers.NotesController.IsTrashAsync(System.Int32)">
            <summary>
            IsTrash method
            </summary>
            <param name="id">Mandatory</param>
            <returns>IActionResult</returns>
        </member>
        <member name="M:FundooAPI.Controllers.NotesController.IsArchiveAsync(System.Int32)">
            <summary>
            IsArchive method
            </summary>
            <param name="id">Mandatory</param>
            <returns>IActionResult</returns>
        </member>
        <member name="M:FundooAPI.Controllers.NotesController.PinAsync(System.Int32)">
            <summary>
            Pin method
            </summary>
            <param name="id">Id Mandaatory</param>
            <returns>IActionResult</returns>
        </member>
        <member name="M:FundooAPI.Controllers.NotesController.ReminderAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:FundooAPI.Controllers.NotesController.DeleteAllNotesAsync">
            <summary>
            DeleteAllNotesAsync
            </summary>
            <returns>IActionResult</returns>
        </member>
        <member name="M:FundooAPI.Controllers.NotesController.AddCollbaratorAsync(System.String,System.Int32)">
            <summary>
            AddCollbaratorAsync method
            </summary>
            <param name="Email">Email Mandatory</param>
            <param name="NoteId">NoteId Mandatory</param>
            <returns>IActionResult</returns>
        </member>
        <member name="M:FundooAPI.Controllers.NotesController.RemoveCollbaratorAsync(System.String,System.Int32)">
            <summary>
            RemoveCollbaratorAsync Method
            </summary>
            <param name="Email">Email Mandatory</param>
             /// <param name="id">Id Mandatory</param>
            <returns>IActionResult</returns>
        </member>
        <member name="M:FundooAPI.Controllers.NotesController.GetAllCollabaratorNotes(System.String)">
            <summary>
            GetAllCollabaratorNotes
            </summary>
            <param name="Email">Email Mandatory</param>
            <returns>IActionResult</returns>
        </member>
        <member name="T:FundooAPI.Startup">
            <summary>
            StartUp Classs
            </summary>
        </member>
        <member name="M:FundooAPI.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            StartUp class constructor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:FundooAPI.Startup.Configuration">
            <summary>
            IConfiguration property
            </summary>
        </member>
        <member name="M:FundooAPI.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:FundooAPI.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
